{"version":3,"sources":["dice-icon.js","app.js","serviceWorker.js","index.js","dicebot.js"],"names":["dice_icon","props","react_default","a","createElement","Object","assign","width","height","viewBox","xmlns","fillRule","clipRule","d","Die","_ref","value","onChange","onRoll","onRemove","Grid_default","container","spacing","style","marginBottom","item","xs","TextField_default","placeholder","evt","target","Button_default","onClick","color","variant","Icon_default","marginRight","marginTop","fill","DiceOptions","_ref2","addDie","rollAll","Dice","_ref3","dice","roll","removeDie","md","Typography_default","map","die","index","app_Die","key","concat","app_DiceOptions","Result","_ref4","newest","values","sum","average","TableRow_default","backgroundColor","TableCell_default","join","History","_ref5","history","clearAll","Table_default","TableHead_default","TableBody_default","result","app_Result","marginLeft","float","App","_useState","useState","_useState2","slicedToArray","setDice","_useState3","_useState4","setHistory","component","align","href","app_Dice","newDice","clone","dicebot","push","results","objectSpread","filter","_","i","app_History","Boolean","window","location","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","Chance","require","Validator","parser","Parser","chance","v","schema","word","type","convert","diceSum","matched","exec","toLowerCase","times","parseInt","sides","integer","min","max","rollNumbers","numbers","number","res","reduce","acc","cur","module","exports","input","arguments","length","undefined","words","split","trim","validate","args","some","rolledWords","parse","evaluate","ignoreError","pickone"],"mappings":"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","file":"static/js/main.3fa29db7.chunk.js","sourcesContent":["import React from 'react'\n\nexport default (props) => <svg width='163' height='181' viewBox='0 0 163 181' xmlns='http://www.w3.org/2000/svg' {...props}>\n  <path fillRule='evenodd' clipRule='evenodd' d='M4.9645 45.4627C4.30849 45.8538 4.3153 46.8062 4.97684 47.1878L81.0002 91.0475C81.3095 91.2259 81.6904 91.2259 81.9997 91.0475L158.023 47.1878C158.685 46.8062 158.691 45.8538 158.035 45.4627L82.012 0.141053C81.6966 -0.0470173 81.3034 -0.047018 80.9879 0.141053L4.9645 45.4627ZM81.5 53.8358C89.5081 53.8358 96 50.0302 96 45.3358C96 40.6414 89.5081 36.8358 81.5 36.8358C73.4918 36.8358 67 40.6414 67 45.3358C67 50.0302 73.4918 53.8358 81.5 53.8358ZM162.497 138.055C162.808 137.877 163 137.546 163 137.187V58.0015C163 57.2312 162.166 56.7501 161.499 57.1361L87.499 99.9782C87.1901 100.157 87 100.487 87 100.844V179.542C87 180.311 87.8301 180.792 88.4968 180.41L162.497 138.055ZM134.499 132.478C134.499 139.106 135.857 139.978 139.999 139.978C144.141 139.978 153.499 128.606 153.499 121.978C153.499 115.351 152.141 114.978 147.999 114.978C143.857 114.978 134.499 125.851 134.499 132.478ZM100.999 123.978C96.8568 123.978 95.499 123.106 95.499 116.478C95.499 109.851 104.857 98.9782 108.999 98.9782C113.141 98.9782 114.499 99.3508 114.499 105.978C114.499 112.606 105.141 123.978 100.999 123.978ZM0 137.187C0 137.546 0.192017 137.877 0.503246 138.055L74.5032 180.41C75.1699 180.792 76 180.311 76 179.542V100.844C76 100.487 75.8099 100.157 75.501 99.9782L1.50104 57.1361C0.83437 56.7501 0 57.2312 0 58.0015V137.187ZM63.5 165.267C67.6421 165.267 69 164.395 69 157.767C69 151.14 59.6421 140.267 55.5 140.267C51.3579 140.267 50 140.64 50 147.267C50 153.895 59.3579 165.267 63.5 165.267ZM47 123.767C47 130.395 45.6421 131.267 41.5 131.267C37.3579 131.267 28 119.895 28 113.267C28 106.64 29.3579 106.267 33.5 106.267C37.6421 106.267 47 117.14 47 123.767ZM19.5 95.2671C23.6421 95.2671 25 94.3945 25 87.7671C25 81.1397 15.6421 70.2671 11.5 70.2671C7.35786 70.2671 6 70.6397 6 77.2671C6 83.8945 15.3579 95.2671 19.5 95.2671Z' />\n</svg>\n","/* eslint-disable react/jsx-no-bind */\n\nimport React, { useState } from 'react'\n\nimport clone from 'clone'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Icon from '@material-ui/core/Icon'\nimport Typography from '@material-ui/core/Typography'\n\nimport DiceIcon from './dice-icon'\nimport dicebot from './dicebot'\n\nconst Die = ({ value, onChange, onRoll, onRemove }) => <Grid\n  container\n  spacing={24}\n  style={{\n    marginBottom: 8\n  }}>\n  <Grid item xs={6}>\n    <TextField\n      placeholder='Value'\n      value={value}\n      onChange={(evt) => { onChange(evt.target.value) }}\n      style={{\n        width: '100%'\n      }} />\n  </Grid>\n  <Grid item xs={3}>\n    <Button\n      onClick={onRemove}\n      color='secondary'\n      variant='contained'\n      style={{\n        width: '100%'\n      }}>\n      <Icon\n        style={{\n          marginRight: 6\n        }}>\n        remove\n      </Icon>\n      <span>REMOVE</span>\n    </Button>\n  </Grid>\n  <Grid item xs={3}>\n    <Button\n      onClick={onRoll}\n      color='primary'\n      variant='contained'\n      style={{\n        width: '100%'\n      }}>\n      <Icon\n        style={{\n          marginRight: 8,\n          marginTop: -4\n        }}>\n        <DiceIcon\n          style={{\n            height: 20,\n            width: 'auto',\n            fill: '#fff'\n          }}\n        />\n      </Icon>\n      <span>ROLL</span>\n    </Button>\n  </Grid>\n</Grid>\n\nconst DiceOptions = ({ addDie, rollAll }) => <Grid container spacing={24}>\n  <Grid item xs={6}>\n    <Button\n      onClick={addDie}\n      color='primary'\n      variant='contained'\n      style={{\n        width: '100%',\n        height: '100%'\n      }}>\n      <Icon\n        style={{\n          marginRight: 8\n        }}>add</Icon>\n      <span>ADD DIE</span>\n    </Button>\n  </Grid>\n  <Grid item xs={6}>\n    <Button\n      onClick={rollAll}\n      color='primary'\n      variant='contained'\n      style={{\n        width: '100%',\n        height: '100%'\n      }}>\n      <Icon\n        style={{\n          marginRight: 8,\n          marginTop: -4\n        }}>\n        <DiceIcon\n          style={{\n            height: 20,\n            width: 'auto',\n            fill: '#fff'\n          }}\n        />\n      </Icon>\n      <span>ROLL ALL</span>\n    </Button>\n  </Grid>\n</Grid>\n\nconst Dice = ({ dice, onChange, roll, addDie, removeDie, rollAll }) => <Grid item md={4} xs={12}>\n  <Typography\n    variant='h6'\n    style={{\n      marginBottom: 24\n    }}>Dice</Typography>\n  {dice.map((die, index) => <Die\n    key={`die-${index}`}\n    onChange={(value) => onChange(value, index)}\n    onRoll={() => { if (die !== '') roll(die) }}\n    onRemove={() => removeDie(index)}\n    value={die} />) }\n  <DiceOptions addDie={addDie} rollAll={rollAll} />\n</Grid>\n\nconst Result = ({ newest, values, sum, average }) => <TableRow style={{\n  backgroundColor: newest ? 'rgba(63, 81, 181, 0.1)' : 'initial'\n}}>\n  <TableCell>{`[ ${values.join(', ')} ]`}</TableCell>\n  <TableCell>{sum}</TableCell>\n  <TableCell>{average}</TableCell>\n</TableRow>\n\nconst History = ({ history, clearAll }) => <Grid item md={8} xs={12}>\n  <Typography\n    variant='h6'\n    style={{\n      marginBottom: 24\n    }}>History</Typography>\n  <Table>\n    <TableHead>\n      <TableRow>\n        <TableCell>Result</TableCell>\n        <TableCell>Sum</TableCell>\n        <TableCell>Average</TableCell>\n      </TableRow>\n    </TableHead>\n    <TableBody>\n      {history.map((result, index) => <Result key={`result-${index}`} {...result} />)}\n    </TableBody>\n  </Table>\n  <Grid container style={{\n    marginTop: 12\n  }}>\n    <Grid\n      xs={8}\n      item\n      style={{ marginLeft: 'auto' }}>\n      <Button\n        onClick={clearAll}\n        style={{ float: 'right' }}\n        color='secondary'\n        variant='contained'>\n        <Icon>clear_all</Icon>\n        <span>CLEAR ALL HISTORY</span>\n      </Button>\n    </Grid>\n  </Grid>\n</Grid>\n\nconst App = () => {\n  const [dice, setDice] = useState([\n    '6',\n    '6 6 6',\n    'D6',\n    '4D6 4d6',\n    '10*(4d6+50)',\n    'sin(d180)',\n    'heads tails',\n    'a b c d3',\n    'a,b, c'\n  ])\n  const [history, setHistory] = useState([])\n\n  return <Grid container component='div'>\n    <div style={{ width: '100%' }}>\n      <Typography\n        variant='h3'\n        align='center'\n        style={{\n          marginBottom: 32\n        }}>Dicebot</Typography>\n    </div>\n    <div style={{ width: '100%' }}>\n      <Typography\n        variant='body1'\n        align='center'\n        style={{\n          marginBottom: 48\n        }}>\n        Welcome to Dicebo, this is a simple client which demonstates some of the capabilities of <a href='https://www.npmjs.com/package/dicebot'>dicebot</a>\n        <br />\n        Here you can manage dice, roll them individually or in bulk\n        <br />\n        Want to see the code? Checkout the <a href='https://lukejpreston.github.io/dicebot'>GitHub Repo</a>\n      </Typography>\n    </div>\n    <Grid container spacing={40}>\n      <Dice\n        dice={dice}\n        onChange={(value, index) => {\n          const newDice = clone(dice)\n          newDice[index] = value\n          setDice(newDice)\n        }}\n        roll={(value) => {\n          const result = dicebot(value)\n          result.newest = true\n          setHistory([result].concat(history.map(result => {\n            result.newest = false\n            return result\n          })))\n        }}\n        addDie={() => {\n          const newDice = clone(dice)\n          newDice.push('')\n          setDice(newDice)\n        }}\n        rollAll={() => {\n          const results = dice.map(value => {\n            if (value !== '') return { newest: true, ...dicebot(value) }\n            return null\n          }).filter(results => results !== null)\n          setHistory(results.concat(history.map(result => {\n            result.newest = false\n            return result\n          })))\n        }}\n        removeDie={(index) => {\n          setDice(dice.filter((_, i) => i !== index))\n        }} />\n      <History\n        history={history}\n        clearAll={() => setHistory([])} />\n    </Grid>\n  </Grid>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n","const Chance = require('chance')\nconst Validator = require('fastest-validator')\nconst Parser = require('expr-eval').Parser\n\nconst parser = new Parser()\nconst chance = Chance()\n\nconst v = new Validator()\nconst schema = {\n  word: { type: 'number', convert: true }\n}\n\nconst diceSum = (word) => {\n  const re = /(\\d*)d(\\d+)/g\n  const matched = re.exec(('' + word).toLowerCase())\n  if (matched !== null) {\n    const times = parseInt(matched[1], 10) || 1\n    const sides = parseInt(matched[2], 10)\n    let sum = 0\n    for (let i = 0; i < times; i++) sum += chance.integer({ min: 1, max: sides })\n    return sum\n  }\n  return word\n}\n\nconst dice = (word) => {\n  const re = /(\\d*)d(\\d+)/g\n  const matched = re.exec(('' + word).toLowerCase())\n  let res = []\n  if (matched !== null) {\n    const times = parseInt(matched[1], 10) || 1\n    const sides = parseInt(matched[2], 10)\n    for (let i = 0; i < times; i++) res.push(chance.integer({ min: 1, max: sides }))\n  }\n  return res\n}\n\nconst rollNumbers = (numbers) => {\n  return numbers.map(number => {\n    if (typeof number === 'string') return dice(number)\n    return [chance.integer({ min: 1, max: number })]\n  }).reduce((acc, cur) => acc.concat(cur), [])\n}\n\nmodule.exports = (input = '') => {\n  input = '' + input\n  const words = input.split(/\\b/g)\n    .map(word => word.trim())\n    .filter(word => word !== '' && word !== ',')\n    .map(word => {\n      const isNumber = v.validate({ word }, schema)\n      if (isNumber === true) return parseInt(word, 10)\n      return word\n    })\n\n  let values = []\n  let args = []\n  const hasNoneDiceOrNumbers = words.some(word => typeof word === 'string' && word.toLowerCase().match(/(\\d*)d(\\d+)/g) === null)\n  if (hasNoneDiceOrNumbers) {\n    const rolledWords = words.map(diceSum)\n    const hasNoneDiceOrNumbers = rolledWords.some(word => typeof word === 'string')\n    if (hasNoneDiceOrNumbers) {\n      try {\n        values.push(parser.parse(rolledWords.join('')).evaluate())\n        args = rolledWords\n      } catch (ignoreError) {\n        values.push(chance.pickone(rolledWords))\n        args = rolledWords\n      }\n    } else {\n      values = rolledWords\n      args = rolledWords\n    }\n  } else {\n    values = rollNumbers(words)\n    args = words\n  }\n\n  const numbers = values.filter(value => typeof value === 'number')\n  const sum = numbers.reduce((acc, cur) => acc + cur, 0)\n  const average = (sum / numbers.length) || 0\n\n  return {\n    args,\n    values,\n    sum,\n    average\n  }\n}\n"],"sourceRoot":""}